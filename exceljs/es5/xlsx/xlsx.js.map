{"version":3,"sources":["../../../lib/xlsx/xlsx.js"],"names":["fs","require","JSZip","PassThrough","ZipStream","StreamBuf","utils","XmlStream","bufferToString","StylesXform","CoreXform","SharedStringsXform","RelationshipsXform","ContentTypesXform","AppXform","WorkbookXform","WorksheetXform","DrawingXform","TableXform","CommentsXform","VmlNotesXform","theme1Xml","fsReadFileAsync","filename","options","Promise","resolve","reject","readFile","error","data","XLSX","workbook","exists","Error","stream","createReadStream","read","close","xform","parseStream","model","workbookXform","worksheetXform","drawingXform","tableXform","reconcile","drawingOptions","media","mediaIndex","Object","keys","drawings","forEach","name","drawing","drawingRel","drawingRels","rels","reduce","o","rel","Id","anchors","anchor","hyperlinks","picture","rId","hyperlink","Target","tableOptions","styles","values","tables","table","sheetOptions","sharedStrings","date1904","properties","comments","vmlDrawings","worksheets","worksheet","relationships","worksheetRels","sheetNo","worksheetHash","globalRels","workbookRels","sheetDefs","path","push","entry","lastDot","lastIndexOf","extension","substr","streamBuf","on","length","medium","type","buffer","toBuffer","pipe","vmlDrawing","themes","toString","Symbol","asyncIterator","chunks","chunk","load","Buffer","concat","base64","from","loadAsync","zip","files","dir","entryName","match","async","write","writableObjectMode","readableObjectMode","content","process","browser","chunkSize","i","substring","end","parseRels","parseWorkbook","sheets","definedNames","views","calcProperties","appXform","appProperties","company","manager","coreXform","coreProperties","assign","_processWorksheetEntry","_processWorksheetRelsEntry","_processThemeEntry","_processMediaEntry","_processDrawingEntry","_processCommentEntry","_processTableEntry","_processDrawingRelsEntry","_processVmlDrawingEntry","all","map","append","dataimg64","indexOf","relsXform","prepare","xml","toXml","tableXml","target","theme1","Type","RelType","OfficeDocument","CoreProperties","ExtenderProperties","count","Styles","Theme","SharedStrings","Worksheet","id","relationshipsXform","commentsXform","vmlNotesXform","xmlStream","render","finalize","creator","lastModifiedBy","created","Date","modified","useSharedStrings","undefined","useStyles","Mock","worksheetOptions","drawingsCount","commentRefs","tableCount","ZipWriter","prepareModel","addContentTypes","addOfficeRels","addWorkbookRels","addWorksheets","addSharedStrings","addDrawings","addTables","addThemes","addStyles","addMedia","addApp","addCore","addWorkbook","_finalize","createWriteStream","then","module","exports"],"mappings":"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","sourcesContent":["const fs = require('fs');\r\nconst JSZip = require('jszip');\r\nconst {PassThrough} = require('readable-stream');\r\nconst ZipStream = require('../utils/zip-stream');\r\nconst StreamBuf = require('../utils/stream-buf');\r\n\r\nconst utils = require('../utils/utils');\r\nconst XmlStream = require('../utils/xml-stream');\r\nconst {bufferToString} = require('../utils/browser-buffer-decode');\r\n\r\nconst StylesXform = require('./xform/style/styles-xform');\r\n\r\nconst CoreXform = require('./xform/core/core-xform');\r\nconst SharedStringsXform = require('./xform/strings/shared-strings-xform');\r\nconst RelationshipsXform = require('./xform/core/relationships-xform');\r\nconst ContentTypesXform = require('./xform/core/content-types-xform');\r\nconst AppXform = require('./xform/core/app-xform');\r\nconst WorkbookXform = require('./xform/book/workbook-xform');\r\nconst WorksheetXform = require('./xform/sheet/worksheet-xform');\r\nconst DrawingXform = require('./xform/drawing/drawing-xform');\r\nconst TableXform = require('./xform/table/table-xform');\r\nconst CommentsXform = require('./xform/comment/comments-xform');\r\nconst VmlNotesXform = require('./xform/comment/vml-notes-xform');\r\n\r\nconst theme1Xml = require('./xml/theme1.js');\r\n\r\nfunction fsReadFileAsync(filename, options) {\r\n  return new Promise((resolve, reject) => {\r\n    fs.readFile(filename, options, (error, data) => {\r\n      if (error) {\r\n        reject(error);\r\n      } else {\r\n        resolve(data);\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nclass XLSX {\r\n  constructor(workbook) {\r\n    this.workbook = workbook;\r\n  }\r\n\r\n  // ===============================================================================\r\n  // Workbook\r\n  // =========================================================================\r\n  // Read\r\n\r\n  async readFile(filename, options) {\r\n    if (!(await utils.fs.exists(filename))) {\r\n      throw new Error(`File not found: ${filename}`);\r\n    }\r\n    const stream = fs.createReadStream(filename);\r\n    try {\r\n      const workbook = await this.read(stream, options);\r\n      stream.close();\r\n      return workbook;\r\n    } catch (error) {\r\n      stream.close();\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  parseRels(stream) {\r\n    const xform = new RelationshipsXform();\r\n    return xform.parseStream(stream);\r\n  }\r\n\r\n  parseWorkbook(stream) {\r\n    const xform = new WorkbookXform();\r\n    return xform.parseStream(stream);\r\n  }\r\n\r\n  parseSharedStrings(stream) {\r\n    const xform = new SharedStringsXform();\r\n    return xform.parseStream(stream);\r\n  }\r\n\r\n  reconcile(model, options) {\r\n    const workbookXform = new WorkbookXform();\r\n    const worksheetXform = new WorksheetXform(options);\r\n    const drawingXform = new DrawingXform();\r\n    const tableXform = new TableXform();\r\n\r\n    workbookXform.reconcile(model);\r\n\r\n    // reconcile drawings with their rels\r\n    const drawingOptions = {\r\n      media: model.media,\r\n      mediaIndex: model.mediaIndex,\r\n    };\r\n    Object.keys(model.drawings).forEach(name => {\r\n      const drawing = model.drawings[name];\r\n      const drawingRel = model.drawingRels[name];\r\n      if (drawingRel) {\r\n        drawingOptions.rels = drawingRel.reduce((o, rel) => {\r\n          o[rel.Id] = rel;\r\n          return o;\r\n        }, {});\r\n        (drawing.anchors || []).forEach(anchor => {\r\n          const hyperlinks = anchor.picture && anchor.picture.hyperlinks;\r\n          if (hyperlinks && drawingOptions.rels[hyperlinks.rId]) {\r\n            hyperlinks.hyperlink = drawingOptions.rels[hyperlinks.rId].Target;\r\n            delete hyperlinks.rId;\r\n          }\r\n        });\r\n        drawingXform.reconcile(drawing, drawingOptions);\r\n      }\r\n    });\r\n\r\n    // reconcile tables with the default styles\r\n    const tableOptions = {\r\n      styles: model.styles,\r\n    };\r\n    Object.values(model.tables).forEach(table => {\r\n      tableXform.reconcile(table, tableOptions);\r\n    });\r\n\r\n    const sheetOptions = {\r\n      styles: model.styles,\r\n      sharedStrings: model.sharedStrings,\r\n      media: model.media,\r\n      mediaIndex: model.mediaIndex,\r\n      date1904: model.properties && model.properties.date1904,\r\n      drawings: model.drawings,\r\n      comments: model.comments,\r\n      tables: model.tables,\r\n      vmlDrawings: model.vmlDrawings,\r\n    };\r\n    model.worksheets.forEach(worksheet => {\r\n      worksheet.relationships = model.worksheetRels[worksheet.sheetNo];\r\n      worksheetXform.reconcile(worksheet, sheetOptions);\r\n    });\r\n\r\n    // delete unnecessary parts\r\n    delete model.worksheetHash;\r\n    delete model.worksheetRels;\r\n    delete model.globalRels;\r\n    delete model.sharedStrings;\r\n    delete model.workbookRels;\r\n    delete model.sheetDefs;\r\n    delete model.styles;\r\n    delete model.mediaIndex;\r\n    delete model.drawings;\r\n    delete model.drawingRels;\r\n    delete model.vmlDrawings;\r\n  }\r\n\r\n  async _processWorksheetEntry(stream, model, sheetNo, options, path) {\r\n    const xform = new WorksheetXform(options);\r\n    const worksheet = await xform.parseStream(stream);\r\n    worksheet.sheetNo = sheetNo;\r\n    model.worksheetHash[path] = worksheet;\r\n    model.worksheets.push(worksheet);\r\n  }\r\n\r\n  async _processCommentEntry(stream, model, name) {\r\n    const xform = new CommentsXform();\r\n    const comments = await xform.parseStream(stream);\r\n    model.comments[`../${name}.xml`] = comments;\r\n  }\r\n\r\n  async _processTableEntry(stream, model, name) {\r\n    const xform = new TableXform();\r\n    const table = await xform.parseStream(stream);\r\n    model.tables[`../tables/${name}.xml`] = table;\r\n  }\r\n\r\n  async _processWorksheetRelsEntry(stream, model, sheetNo) {\r\n    const xform = new RelationshipsXform();\r\n    const relationships = await xform.parseStream(stream);\r\n    model.worksheetRels[sheetNo] = relationships;\r\n  }\r\n\r\n  async _processMediaEntry(entry, model, filename) {\r\n    const lastDot = filename.lastIndexOf('.');\r\n    // if we can't determine extension, ignore it\r\n    if (lastDot >= 1) {\r\n      const extension = filename.substr(lastDot + 1);\r\n      const name = filename.substr(0, lastDot);\r\n      await new Promise((resolve, reject) => {\r\n        const streamBuf = new StreamBuf();\r\n        streamBuf.on('finish', () => {\r\n          model.mediaIndex[filename] = model.media.length;\r\n          model.mediaIndex[name] = model.media.length;\r\n          const medium = {\r\n            type: 'image',\r\n            name,\r\n            extension,\r\n            buffer: streamBuf.toBuffer(),\r\n          };\r\n          model.media.push(medium);\r\n          resolve();\r\n        });\r\n        entry.on('error', error => {\r\n          reject(error);\r\n        });\r\n        entry.pipe(streamBuf);\r\n      });\r\n    }\r\n  }\r\n\r\n  async _processDrawingEntry(entry, model, name) {\r\n    const xform = new DrawingXform();\r\n    const drawing = await xform.parseStream(entry);\r\n    model.drawings[name] = drawing;\r\n  }\r\n\r\n  async _processDrawingRelsEntry(entry, model, name) {\r\n    const xform = new RelationshipsXform();\r\n    const relationships = await xform.parseStream(entry);\r\n    model.drawingRels[name] = relationships;\r\n  }\r\n\r\n  async _processVmlDrawingEntry(entry, model, name) {\r\n    const xform = new VmlNotesXform();\r\n    const vmlDrawing = await xform.parseStream(entry);\r\n    model.vmlDrawings[`../drawings/${name}.vml`] = vmlDrawing;\r\n  }\r\n\r\n  async _processThemeEntry(entry, model, name) {\r\n    await new Promise((resolve, reject) => {\r\n      // TODO: stream entry into buffer and store the xml in the model.themes[]\r\n      const stream = new StreamBuf();\r\n      entry.on('error', reject);\r\n      stream.on('error', reject);\r\n      stream.on('finish', () => {\r\n        model.themes[name] = stream.read().toString();\r\n        resolve();\r\n      });\r\n      entry.pipe(stream);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @deprecated since version 4.0. You should use `#read` instead. Please follow upgrade instruction: https://github.com/exceljs/exceljs/blob/master/UPGRADE-4.0.md\r\n   */\r\n  createInputStream() {\r\n    throw new Error(\r\n      '`XLSX#createInputStream` is deprecated. You should use `XLSX#read` instead. This method will be removed in version 5.0. Please follow upgrade instruction: https://github.com/exceljs/exceljs/blob/master/UPGRADE-4.0.md'\r\n    );\r\n  }\r\n\r\n  async read(stream, options) {\r\n    // TODO: Remove once node v8 is deprecated\r\n    // Detect and upgrade old streams\r\n    if (!stream[Symbol.asyncIterator] && stream.pipe) {\r\n      stream = stream.pipe(new PassThrough());\r\n    }\r\n    const chunks = [];\r\n    for await (const chunk of stream) {\r\n      chunks.push(chunk);\r\n    }\r\n    return this.load(Buffer.concat(chunks), options);\r\n  }\r\n\r\n  async load(data, options) {\r\n    let buffer;\r\n    if (options && options.base64) {\r\n      buffer = Buffer.from(data.toString(), 'base64');\r\n    } else {\r\n      buffer = data;\r\n    }\r\n\r\n    const model = {\r\n      worksheets: [],\r\n      worksheetHash: {},\r\n      worksheetRels: [],\r\n      themes: {},\r\n      media: [],\r\n      mediaIndex: {},\r\n      drawings: {},\r\n      drawingRels: {},\r\n      comments: {},\r\n      tables: {},\r\n      vmlDrawings: {},\r\n    };\r\n\r\n    const zip = await JSZip.loadAsync(buffer);\r\n    for (const entry of Object.values(zip.files)) {\r\n      /* eslint-disable no-await-in-loop */\r\n      if (!entry.dir) {\r\n        let entryName = entry.name;\r\n        if (entryName[0] === '/') {\r\n          entryName = entryName.substr(1);\r\n        }\r\n        let stream;\r\n        if (entryName.match(/xl\\/media\\//) ||\r\n          // themes are not parsed as stream\r\n          entryName.match(/xl\\/theme\\/([a-zA-Z0-9]+)[.]xml/)) {\r\n          stream = new PassThrough();\r\n          stream.write(await entry.async('nodebuffer'));\r\n        } else {\r\n          // use object mode to avoid buffer-string convention\r\n          stream = new PassThrough({\r\n            writableObjectMode: true,\r\n            readableObjectMode: true,\r\n          });\r\n          let content;\r\n          // https://www.npmjs.com/package/process\r\n          if (process.browser) {\r\n            // running in browser, use TextDecoder if possible\r\n            content = bufferToString(await entry.async('nodebuffer'));\r\n          } else {\r\n            // running in node.js\r\n            content = await entry.async('string');\r\n          }\r\n          const chunkSize = 16 * 1024;\r\n          for (let i = 0; i < content.length; i += chunkSize) {\r\n            stream.write(content.substring(i, i + chunkSize));\r\n          }\r\n        }\r\n        stream.end();\r\n        switch (entryName) {\r\n          case '_rels/.rels':\r\n            model.globalRels = await this.parseRels(stream);\r\n            break;\r\n\r\n          case 'xl/workbook.xml': {\r\n            const workbook = await this.parseWorkbook(stream);\r\n            model.sheets = workbook.sheets;\r\n            model.definedNames = workbook.definedNames;\r\n            model.views = workbook.views;\r\n            model.properties = workbook.properties;\r\n            model.calcProperties = workbook.calcProperties;\r\n            break;\r\n          }\r\n\r\n          case 'xl/_rels/workbook.xml.rels':\r\n            model.workbookRels = await this.parseRels(stream);\r\n            break;\r\n\r\n          case 'xl/sharedStrings.xml':\r\n            model.sharedStrings = new SharedStringsXform();\r\n            await model.sharedStrings.parseStream(stream);\r\n            break;\r\n\r\n          case 'xl/styles.xml':\r\n            model.styles = new StylesXform();\r\n            await model.styles.parseStream(stream);\r\n            break;\r\n\r\n          case 'docProps/app.xml': {\r\n            const appXform = new AppXform();\r\n            const appProperties = await appXform.parseStream(stream);\r\n            model.company = appProperties.company;\r\n            model.manager = appProperties.manager;\r\n            break;\r\n          }\r\n\r\n          case 'docProps/core.xml': {\r\n            const coreXform = new CoreXform();\r\n            const coreProperties = await coreXform.parseStream(stream);\r\n            Object.assign(model, coreProperties);\r\n            break;\r\n          }\r\n\r\n          default: {\r\n            let match = entryName.match(/xl\\/worksheets\\/sheet(\\d+)[.]xml/);\r\n            if (match) {\r\n              await this._processWorksheetEntry(stream, model, match[1], options, entryName);\r\n              break;\r\n            }\r\n            match = entryName.match(/xl\\/worksheets\\/_rels\\/sheet(\\d+)[.]xml.rels/);\r\n            if (match) {\r\n              await this._processWorksheetRelsEntry(stream, model, match[1]);\r\n              break;\r\n            }\r\n            match = entryName.match(/xl\\/theme\\/([a-zA-Z0-9]+)[.]xml/);\r\n            if (match) {\r\n              await this._processThemeEntry(stream, model, match[1]);\r\n              break;\r\n            }\r\n            match = entryName.match(/xl\\/media\\/([a-zA-Z0-9]+[.][a-zA-Z0-9]{3,4})$/);\r\n            if (match) {\r\n              await this._processMediaEntry(stream, model, match[1]);\r\n              break;\r\n            }\r\n            match = entryName.match(/xl\\/drawings\\/([a-zA-Z0-9]+)[.]xml/);\r\n            if (match) {\r\n              await this._processDrawingEntry(stream, model, match[1]);\r\n              break;\r\n            }\r\n            match = entryName.match(/xl\\/(comments\\d+)[.]xml/);\r\n            if (match) {\r\n              await this._processCommentEntry(stream, model, match[1]);\r\n              break;\r\n            }\r\n            match = entryName.match(/xl\\/tables\\/(table\\d+)[.]xml/);\r\n            if (match) {\r\n              await this._processTableEntry(stream, model, match[1]);\r\n              break;\r\n            }\r\n            match = entryName.match(/xl\\/drawings\\/_rels\\/([a-zA-Z0-9]+)[.]xml[.]rels/);\r\n            if (match) {\r\n              await this._processDrawingRelsEntry(stream, model, match[1]);\r\n              break;\r\n            }\r\n            match = entryName.match(/xl\\/drawings\\/(vmlDrawing\\d+)[.]vml/);\r\n            if (match) {\r\n              await this._processVmlDrawingEntry(stream, model, match[1]);\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.reconcile(model, options);\r\n\r\n    // apply model\r\n    this.workbook.model = model;\r\n    return this.workbook;\r\n  }\r\n\r\n  // =========================================================================\r\n  // Write\r\n\r\n  async addMedia(zip, model) {\r\n    await Promise.all(\r\n      model.media.map(async medium => {\r\n        if (medium.type === 'image') {\r\n          const filename = `xl/media/${medium.name}.${medium.extension}`;\r\n          if (medium.filename) {\r\n            const data = await fsReadFileAsync(medium.filename);\r\n            return zip.append(data, {name: filename});\r\n          }\r\n          if (medium.buffer) {\r\n            return zip.append(medium.buffer, {name: filename});\r\n          }\r\n          if (medium.base64) {\r\n            const dataimg64 = medium.base64;\r\n            const content = dataimg64.substring(dataimg64.indexOf(',') + 1);\r\n            return zip.append(content, {name: filename, base64: true});\r\n          }\r\n        }\r\n        throw new Error('Unsupported media');\r\n      })\r\n    );\r\n  }\r\n\r\n  addDrawings(zip, model) {\r\n    const drawingXform = new DrawingXform();\r\n    const relsXform = new RelationshipsXform();\r\n\r\n    model.worksheets.forEach(worksheet => {\r\n      const {drawing} = worksheet;\r\n      if (drawing) {\r\n        drawingXform.prepare(drawing, {});\r\n        let xml = drawingXform.toXml(drawing);\r\n        zip.append(xml, {name: `xl/drawings/${drawing.name}.xml`});\r\n\r\n        xml = relsXform.toXml(drawing.rels);\r\n        zip.append(xml, {name: `xl/drawings/_rels/${drawing.name}.xml.rels`});\r\n      }\r\n    });\r\n  }\r\n\r\n  addTables(zip, model) {\r\n    const tableXform = new TableXform();\r\n\r\n    model.worksheets.forEach(worksheet => {\r\n      const {tables} = worksheet;\r\n      tables.forEach(table => {\r\n        tableXform.prepare(table, {});\r\n        const tableXml = tableXform.toXml(table);\r\n        zip.append(tableXml, {name: `xl/tables/${table.target}`});\r\n      });\r\n    });\r\n  }\r\n\r\n  async addContentTypes(zip, model) {\r\n    const xform = new ContentTypesXform();\r\n    const xml = xform.toXml(model);\r\n    zip.append(xml, {name: '[Content_Types].xml'});\r\n  }\r\n\r\n  async addApp(zip, model) {\r\n    const xform = new AppXform();\r\n    const xml = xform.toXml(model);\r\n    zip.append(xml, {name: 'docProps/app.xml'});\r\n  }\r\n\r\n  async addCore(zip, model) {\r\n    const coreXform = new CoreXform();\r\n    zip.append(coreXform.toXml(model), {name: 'docProps/core.xml'});\r\n  }\r\n\r\n  async addThemes(zip, model) {\r\n    const themes = model.themes || {theme1: theme1Xml};\r\n    Object.keys(themes).forEach(name => {\r\n      const xml = themes[name];\r\n      const path = `xl/theme/${name}.xml`;\r\n      zip.append(xml, {name: path});\r\n    });\r\n  }\r\n\r\n  async addOfficeRels(zip) {\r\n    const xform = new RelationshipsXform();\r\n    const xml = xform.toXml([\r\n      {Id: 'rId1', Type: XLSX.RelType.OfficeDocument, Target: 'xl/workbook.xml'},\r\n      {Id: 'rId2', Type: XLSX.RelType.CoreProperties, Target: 'docProps/core.xml'},\r\n      {Id: 'rId3', Type: XLSX.RelType.ExtenderProperties, Target: 'docProps/app.xml'},\r\n    ]);\r\n    zip.append(xml, {name: '_rels/.rels'});\r\n  }\r\n\r\n  async addWorkbookRels(zip, model) {\r\n    let count = 1;\r\n    const relationships = [\r\n      {Id: `rId${count++}`, Type: XLSX.RelType.Styles, Target: 'styles.xml'},\r\n      {Id: `rId${count++}`, Type: XLSX.RelType.Theme, Target: 'theme/theme1.xml'},\r\n    ];\r\n    if (model.sharedStrings.count) {\r\n      relationships.push({\r\n        Id: `rId${count++}`,\r\n        Type: XLSX.RelType.SharedStrings,\r\n        Target: 'sharedStrings.xml',\r\n      });\r\n    }\r\n    model.worksheets.forEach(worksheet => {\r\n      worksheet.rId = `rId${count++}`;\r\n      relationships.push({\r\n        Id: worksheet.rId,\r\n        Type: XLSX.RelType.Worksheet,\r\n        Target: `worksheets/sheet${worksheet.id}.xml`,\r\n      });\r\n    });\r\n    const xform = new RelationshipsXform();\r\n    const xml = xform.toXml(relationships);\r\n    zip.append(xml, {name: 'xl/_rels/workbook.xml.rels'});\r\n  }\r\n\r\n  async addSharedStrings(zip, model) {\r\n    if (model.sharedStrings && model.sharedStrings.count) {\r\n      zip.append(model.sharedStrings.xml, {name: 'xl/sharedStrings.xml'});\r\n    }\r\n  }\r\n\r\n  async addStyles(zip, model) {\r\n    const {xml} = model.styles;\r\n    if (xml) {\r\n      zip.append(xml, {name: 'xl/styles.xml'});\r\n    }\r\n  }\r\n\r\n  async addWorkbook(zip, model) {\r\n    const xform = new WorkbookXform();\r\n    zip.append(xform.toXml(model), {name: 'xl/workbook.xml'});\r\n  }\r\n\r\n  async addWorksheets(zip, model) {\r\n    // preparation phase\r\n    const worksheetXform = new WorksheetXform();\r\n    const relationshipsXform = new RelationshipsXform();\r\n    const commentsXform = new CommentsXform();\r\n    const vmlNotesXform = new VmlNotesXform();\r\n\r\n    // write sheets\r\n    model.worksheets.forEach(worksheet => {\r\n      let xmlStream = new XmlStream();\r\n      worksheetXform.render(xmlStream, worksheet);\r\n      zip.append(xmlStream.xml, {name: `xl/worksheets/sheet${worksheet.id}.xml`});\r\n\r\n      if (worksheet.rels && worksheet.rels.length) {\r\n        xmlStream = new XmlStream();\r\n        relationshipsXform.render(xmlStream, worksheet.rels);\r\n        zip.append(xmlStream.xml, {name: `xl/worksheets/_rels/sheet${worksheet.id}.xml.rels`});\r\n      }\r\n\r\n      if (worksheet.comments.length > 0) {\r\n        xmlStream = new XmlStream();\r\n        commentsXform.render(xmlStream, worksheet);\r\n        zip.append(xmlStream.xml, {name: `xl/comments${worksheet.id}.xml`});\r\n\r\n        xmlStream = new XmlStream();\r\n        vmlNotesXform.render(xmlStream, worksheet);\r\n        zip.append(xmlStream.xml, {name: `xl/drawings/vmlDrawing${worksheet.id}.vml`});\r\n      }\r\n    });\r\n  }\r\n\r\n  _finalize(zip) {\r\n    return new Promise((resolve, reject) => {\r\n      zip.on('finish', () => {\r\n        resolve(this);\r\n      });\r\n      zip.on('error', reject);\r\n      zip.finalize();\r\n    });\r\n  }\r\n\r\n  prepareModel(model, options) {\r\n    // ensure following properties have sane values\r\n    model.creator = model.creator || 'ExcelJS';\r\n    model.lastModifiedBy = model.lastModifiedBy || 'ExcelJS';\r\n    model.created = model.created || new Date();\r\n    model.modified = model.modified || new Date();\r\n\r\n    model.useSharedStrings =\r\n      options.useSharedStrings !== undefined ? options.useSharedStrings : true;\r\n    model.useStyles = options.useStyles !== undefined ? options.useStyles : true;\r\n\r\n    // Manage the shared strings\r\n    model.sharedStrings = new SharedStringsXform();\r\n\r\n    // add a style manager to handle cell formats, fonts, etc.\r\n    model.styles = model.useStyles ? new StylesXform(true) : new StylesXform.Mock();\r\n\r\n    // prepare all of the things before the render\r\n    const workbookXform = new WorkbookXform();\r\n    const worksheetXform = new WorksheetXform();\r\n\r\n    workbookXform.prepare(model);\r\n\r\n    const worksheetOptions = {\r\n      sharedStrings: model.sharedStrings,\r\n      styles: model.styles,\r\n      date1904: model.properties.date1904,\r\n      drawingsCount: 0,\r\n      media: model.media,\r\n    };\r\n    worksheetOptions.drawings = model.drawings = [];\r\n    worksheetOptions.commentRefs = model.commentRefs = [];\r\n    let tableCount = 0;\r\n    model.tables = [];\r\n    model.worksheets.forEach(worksheet => {\r\n      // assign unique filenames to tables\r\n      worksheet.tables.forEach(table => {\r\n        tableCount++;\r\n        table.target = `table${tableCount}.xml`;\r\n        table.id = tableCount;\r\n        model.tables.push(table);\r\n      });\r\n\r\n      worksheetXform.prepare(worksheet, worksheetOptions);\r\n    });\r\n\r\n    // TODO: workbook drawing list\r\n  }\r\n\r\n  async write(stream, options) {\r\n    options = options || {};\r\n    const {model} = this.workbook;\r\n    const zip = new ZipStream.ZipWriter(options.zip);\r\n    zip.pipe(stream);\r\n\r\n    this.prepareModel(model, options);\r\n\r\n    // render\r\n    await this.addContentTypes(zip, model);\r\n    await this.addOfficeRels(zip, model);\r\n    await this.addWorkbookRels(zip, model);\r\n    await this.addWorksheets(zip, model);\r\n    await this.addSharedStrings(zip, model); // always after worksheets\r\n    await this.addDrawings(zip, model);\r\n    await this.addTables(zip, model);\r\n    await Promise.all([this.addThemes(zip, model), this.addStyles(zip, model)]);\r\n    await this.addMedia(zip, model);\r\n    await Promise.all([this.addApp(zip, model), this.addCore(zip, model)]);\r\n    await this.addWorkbook(zip, model);\r\n    return this._finalize(zip);\r\n  }\r\n\r\n  writeFile(filename, options) {\r\n    const stream = fs.createWriteStream(filename);\r\n\r\n    return new Promise((resolve, reject) => {\r\n      stream.on('finish', () => {\r\n        resolve();\r\n      });\r\n      stream.on('error', error => {\r\n        reject(error);\r\n      });\r\n\r\n      this.write(stream, options).then(() => {\r\n        stream.end();\r\n      });\r\n    });\r\n  }\r\n\r\n  async writeBuffer(options) {\r\n    const stream = new StreamBuf();\r\n    await this.write(stream, options);\r\n    return stream.read();\r\n  }\r\n}\r\n\r\nXLSX.RelType = require('./rel-type');\r\n\r\nmodule.exports = XLSX;\r\n"],"file":"xlsx.js"}