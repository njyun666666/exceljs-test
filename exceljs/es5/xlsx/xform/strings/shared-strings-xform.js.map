{"version":3,"sources":["../../../../../lib/xlsx/xform/strings/shared-strings-xform.js"],"names":["XmlStream","require","BaseXform","SharedStringXform","SharedStringsXform","model","values","count","hash","Object","create","rich","_sharedStringXform","length","index","value","richText","addRichText","addText","undefined","push","xml","sharedStringXform","toXml","xmlStream","_values","openXml","StdDocAttributes","openNode","xmlns","uniqueCount","sx","forEach","sharedString","render","closeNode","node","parser","parseOpen","name","Error","JSON","stringify","text","parseText","parseClose","module","exports"],"mappings":"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","sourcesContent":["const XmlStream = require('../../../utils/xml-stream');\r\nconst BaseXform = require('../base-xform');\r\nconst SharedStringXform = require('./shared-string-xform');\r\n\r\nclass SharedStringsXform extends BaseXform {\r\n  constructor(model) {\r\n    super();\r\n\r\n    this.model = model || {\r\n      values: [],\r\n      count: 0,\r\n    };\r\n    this.hash = Object.create(null);\r\n    this.rich = Object.create(null);\r\n  }\r\n\r\n  get sharedStringXform() {\r\n    return this._sharedStringXform || (this._sharedStringXform = new SharedStringXform());\r\n  }\r\n\r\n  get values() {\r\n    return this.model.values;\r\n  }\r\n\r\n  get uniqueCount() {\r\n    return this.model.values.length;\r\n  }\r\n\r\n  get count() {\r\n    return this.model.count;\r\n  }\r\n\r\n  getString(index) {\r\n    return this.model.values[index];\r\n  }\r\n\r\n  add(value) {\r\n    return value.richText ? this.addRichText(value) : this.addText(value);\r\n  }\r\n\r\n  addText(value) {\r\n    let index = this.hash[value];\r\n    if (index === undefined) {\r\n      index = this.hash[value] = this.model.values.length;\r\n      this.model.values.push(value);\r\n    }\r\n    this.model.count++;\r\n    return index;\r\n  }\r\n\r\n  addRichText(value) {\r\n    // TODO: add WeakMap here\r\n    const xml = this.sharedStringXform.toXml(value);\r\n    let index = this.rich[xml];\r\n    if (index === undefined) {\r\n      index = this.rich[xml] = this.model.values.length;\r\n      this.model.values.push(value);\r\n    }\r\n    this.model.count++;\r\n    return index;\r\n  }\r\n\r\n  // <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\r\n  // <sst xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\" count=\"<%=totalRefs%>\" uniqueCount=\"<%=count%>\">\r\n  //   <si><t><%=text%></t></si>\r\n  //   <si><r><rPr></rPr><t></t></r></si>\r\n  // </sst>\r\n\r\n  render(xmlStream, model) {\r\n    model = model || this._values;\r\n    xmlStream.openXml(XmlStream.StdDocAttributes);\r\n\r\n    xmlStream.openNode('sst', {\r\n      xmlns: 'http://schemas.openxmlformats.org/spreadsheetml/2006/main',\r\n      count: model.count,\r\n      uniqueCount: model.values.length,\r\n    });\r\n\r\n    const sx = this.sharedStringXform;\r\n    model.values.forEach(sharedString => {\r\n      sx.render(xmlStream, sharedString);\r\n    });\r\n    xmlStream.closeNode();\r\n  }\r\n\r\n  parseOpen(node) {\r\n    if (this.parser) {\r\n      this.parser.parseOpen(node);\r\n      return true;\r\n    }\r\n    switch (node.name) {\r\n      case 'sst':\r\n        return true;\r\n      case 'si':\r\n        this.parser = this.sharedStringXform;\r\n        this.parser.parseOpen(node);\r\n        return true;\r\n      default:\r\n        throw new Error(`Unexpected xml node in parseOpen: ${JSON.stringify(node)}`);\r\n    }\r\n  }\r\n\r\n  parseText(text) {\r\n    if (this.parser) {\r\n      this.parser.parseText(text);\r\n    }\r\n  }\r\n\r\n  parseClose(name) {\r\n    if (this.parser) {\r\n      if (!this.parser.parseClose(name)) {\r\n        this.model.values.push(this.parser.model);\r\n        this.model.count++;\r\n        this.parser = undefined;\r\n      }\r\n      return true;\r\n    }\r\n    switch (name) {\r\n      case 'sst':\r\n        return false;\r\n      default:\r\n        throw new Error(`Unexpected xml node in parseClose: ${name}`);\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = SharedStringsXform;\r\n"],"file":"shared-strings-xform.js"}