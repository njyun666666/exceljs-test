{"version":3,"sources":["../../../lib/utils/typed-stack.js"],"names":["TypedStack","type","_type","_stack","length","tos","pop","instance","Error","push","module","exports"],"mappings":";;;;;;;;IAAMA,U;AACJ,sBAAYC,IAAZ,EAAkB;AAAA;;AAChB,SAAKC,KAAL,GAAaD,IAAb;AACA,SAAKE,MAAL,GAAc,EAAd;AACD;;;;SAED,eAAW;AACT,aAAO,KAAKA,MAAL,CAAYC,MAAnB;AACD;;;WAED,eAAM;AACJ,UAAMC,GAAG,GAAG,KAAKF,MAAL,CAAYG,GAAZ,EAAZ;;AACA,aAAOD,GAAG,IAAI,IAAI,KAAKH,KAAT,EAAd;AACD;;;WAED,cAAKK,QAAL,EAAe;AACb,UAAI,EAAEA,QAAQ,YAAY,KAAKL,KAA3B,CAAJ,EAAuC;AACrC,cAAM,IAAIM,KAAJ,CAAU,mCAAV,CAAN;AACD;;AACD,WAAKL,MAAL,CAAYM,IAAZ,CAAiBF,QAAjB;AACD;;;;;;AAGHG,MAAM,CAACC,OAAP,GAAiBX,UAAjB","sourcesContent":["class TypedStack {\r\n  constructor(type) {\r\n    this._type = type;\r\n    this._stack = [];\r\n  }\r\n\r\n  get size() {\r\n    return this._stack.length;\r\n  }\r\n\r\n  pop() {\r\n    const tos = this._stack.pop();\r\n    return tos || new this._type();\r\n  }\r\n\r\n  push(instance) {\r\n    if (!(instance instanceof this._type)) {\r\n      throw new Error('Invalid type pushed to TypedStack');\r\n    }\r\n    this._stack.push(instance);\r\n  }\r\n}\r\n\r\nmodule.exports = TypedStack;\r\n"],"file":"typed-stack.js"}