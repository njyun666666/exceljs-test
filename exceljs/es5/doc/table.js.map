{"version":3,"sources":["../../../lib/doc/table.js"],"names":["colCache","require","Column","table","column","index","name","value","cacheState","_set","filterButton","style","totalsRowLabel","totalsRowFunction","totalsRowResult","totalsRowFormula","Table","worksheet","validate","store","Error","columns","length","rows","height","headerRow","filterHeight","totalsRow","assign","o","dflt","undefined","assert","test","message","ref","tl","decodeAddress","row","col","width","tableHeight","autoFilterRef","encode","tableRef","forEach","i","getFormula","assignStyle","cell","Object","keys","key","count","r","getRow","j","getCell","data","formula","result","_cache","values","rowNumber","push","splice","rowIndex","colIndex","target","prop","_assign","displyName","displayName","showFirstColumn","showLastColumn","showRowStripes","showColumnStripes","module","exports"],"mappings":"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","sourcesContent":["/* eslint-disable max-classes-per-file */\r\nconst colCache = require('../utils/col-cache');\r\n\r\nclass Column {\r\n  // wrapper around column model, allowing access and manipulation\r\n  constructor(table, column, index) {\r\n    this.table = table;\r\n    this.column = column;\r\n    this.index = index;\r\n  }\r\n\r\n  _set(name, value) {\r\n    this.table.cacheState();\r\n    this.column[name] = value;\r\n  }\r\n\r\n  /* eslint-disable lines-between-class-members */\r\n  get name() {\r\n    return this.column.name;\r\n  }\r\n  set name(value) {\r\n    this._set('name', value);\r\n  }\r\n\r\n  get filterButton() {\r\n    return this.column.filterButton;\r\n  }\r\n  set filterButton(value) {\r\n    this.column.filterButton = value;\r\n  }\r\n\r\n  get style() {\r\n    return this.column.style;\r\n  }\r\n  set style(value) {\r\n    this.column.style = value;\r\n  }\r\n\r\n  get totalsRowLabel() {\r\n    return this.column.totalsRowLabel;\r\n  }\r\n  set totalsRowLabel(value) {\r\n    this._set('totalsRowLabel', value);\r\n  }\r\n\r\n  get totalsRowFunction() {\r\n    return this.column.totalsRowFunction;\r\n  }\r\n  set totalsRowFunction(value) {\r\n    this._set('totalsRowFunction', value);\r\n  }\r\n\r\n  get totalsRowResult() {\r\n    return this.column.totalsRowResult;\r\n  }\r\n  set totalsRowResult(value) {\r\n    this._set('totalsRowResult', value);\r\n  }\r\n\r\n  get totalsRowFormula() {\r\n    return this.column.totalsRowFormula;\r\n  }\r\n  set totalsRowFormula(value) {\r\n    this._set('totalsRowFormula', value);\r\n  }\r\n  /* eslint-enable lines-between-class-members */\r\n}\r\n\r\nclass Table {\r\n  constructor(worksheet, table) {\r\n    this.worksheet = worksheet;\r\n    if (table) {\r\n      this.table = table;\r\n      // check things are ok first\r\n      this.validate();\r\n\r\n      this.store();\r\n    }\r\n  }\r\n\r\n  getFormula(column) {\r\n    // get the correct formula to apply to the totals row\r\n    switch (column.totalsRowFunction) {\r\n      case 'none':\r\n        return null;\r\n      case 'average':\r\n        return `SUBTOTAL(101,${this.table.name}[${column.name}])`;\r\n      case 'countNums':\r\n        return `SUBTOTAL(102,${this.table.name}[${column.name}])`;\r\n      case 'count':\r\n        return `SUBTOTAL(103,${this.table.name}[${column.name}])`;\r\n      case 'max':\r\n        return `SUBTOTAL(104,${this.table.name}[${column.name}])`;\r\n      case 'min':\r\n        return `SUBTOTAL(105,${this.table.name}[${column.name}])`;\r\n      case 'stdDev':\r\n        return `SUBTOTAL(106,${this.table.name}[${column.name}])`;\r\n      case 'var':\r\n        return `SUBTOTAL(107,${this.table.name}[${column.name}])`;\r\n      case 'sum':\r\n        return `SUBTOTAL(109,${this.table.name}[${column.name}])`;\r\n      case 'custom':\r\n        return column.totalsRowFormula;\r\n      default:\r\n        throw new Error(`Invalid Totals Row Function: ${column.totalsRowFunction}`);\r\n    }\r\n  }\r\n\r\n  get width() {\r\n    // width of the table\r\n    return this.table.columns.length;\r\n  }\r\n\r\n  get height() {\r\n    // height of the table data\r\n    return this.table.rows.length;\r\n  }\r\n\r\n  get filterHeight() {\r\n    // height of the table data plus optional header row\r\n    return this.height + (this.table.headerRow ? 1 : 0);\r\n  }\r\n\r\n  get tableHeight() {\r\n    // full height of the table on the sheet\r\n    return this.filterHeight + (this.table.totalsRow ? 1 : 0);\r\n  }\r\n\r\n  validate() {\r\n    const {table} = this;\r\n    // set defaults and check is valid\r\n    const assign = (o, name, dflt) => {\r\n      if (o[name] === undefined) {\r\n        o[name] = dflt;\r\n      }\r\n    };\r\n    assign(table, 'headerRow', true);\r\n    assign(table, 'totalsRow', false);\r\n\r\n    assign(table, 'style', {});\r\n    assign(table.style, 'theme', 'TableStyleMedium2');\r\n    assign(table.style, 'showFirstColumn', false);\r\n    assign(table.style, 'showLastColumn', false);\r\n    assign(table.style, 'showRowStripes', false);\r\n    assign(table.style, 'showColumnStripes', false);\r\n\r\n    const assert = (test, message) => {\r\n      if (!test) {\r\n        throw new Error(message);\r\n      }\r\n    };\r\n    assert(table.ref, 'Table must have ref');\r\n    assert(table.columns, 'Table must have column definitions');\r\n    assert(table.rows, 'Table must have row definitions');\r\n\r\n    table.tl = colCache.decodeAddress(table.ref);\r\n    const {row, col} = table.tl;\r\n    assert(row > 0, 'Table must be on valid row');\r\n    assert(col > 0, 'Table must be on valid col');\r\n\r\n    const {width, filterHeight, tableHeight} = this;\r\n\r\n    // autoFilterRef is a range that includes optional headers only\r\n    table.autoFilterRef = colCache.encode(row, col, row + filterHeight - 1, col + width - 1);\r\n\r\n    // tableRef is a range that includes optional headers and totals\r\n    table.tableRef = colCache.encode(row, col, row + tableHeight - 1, col + width - 1);\r\n\r\n    table.columns.forEach((column, i) => {\r\n      assert(column.name, `Column ${i} must have a name`);\r\n      if (i === 0) {\r\n        assign(column, 'totalsRowLabel', 'Total');\r\n      } else {\r\n        assign(column, 'totalsRowFunction', 'none');\r\n        column.totalsRowFormula = this.getFormula(column);\r\n      }\r\n    });\r\n  }\r\n\r\n  store() {\r\n    // where the table needs to store table data, headers, footers in\r\n    // the sheet...\r\n    const assignStyle = (cell, style) => {\r\n      if (style) {\r\n        Object.keys(style).forEach(key => {\r\n          cell[key] = style[key];\r\n        });\r\n      }\r\n    };\r\n\r\n    const {worksheet, table} = this;\r\n    const {row, col} = table.tl;\r\n    let count = 0;\r\n    if (table.headerRow) {\r\n      const r = worksheet.getRow(row + count++);\r\n      table.columns.forEach((column, j) => {\r\n        const {style, name} = column;\r\n        const cell = r.getCell(col + j);\r\n        cell.value = name;\r\n        assignStyle(cell, style);\r\n      });\r\n    }\r\n    table.rows.forEach(data => {\r\n      const r = worksheet.getRow(row + count++);\r\n      data.forEach((value, j) => {\r\n        const cell = r.getCell(col + j);\r\n        cell.value = value;\r\n\r\n        assignStyle(cell, table.columns[j].style);\r\n      });\r\n    });\r\n\r\n    if (table.totalsRow) {\r\n      const r = worksheet.getRow(row + count++);\r\n      table.columns.forEach((column, j) => {\r\n        const cell = r.getCell(col + j);\r\n        if (j === 0) {\r\n          cell.value = column.totalsRowLabel;\r\n        } else {\r\n          const formula = this.getFormula(column);\r\n          if (formula) {\r\n            cell.value = {\r\n              formula: column.totalsRowFormula,\r\n              result: column.totalsRowResult,\r\n            };\r\n          } else {\r\n            cell.value = null;\r\n          }\r\n        }\r\n\r\n        assignStyle(cell, column.style);\r\n      });\r\n    }\r\n  }\r\n\r\n  load(worksheet) {\r\n    // where the table will read necessary features from a loaded sheet\r\n    const {table} = this;\r\n    const {row, col} = table.tl;\r\n    let count = 0;\r\n    if (table.headerRow) {\r\n      const r = worksheet.getRow(row + count++);\r\n      table.columns.forEach((column, j) => {\r\n        const cell = r.getCell(col + j);\r\n        cell.value = column.name;\r\n      });\r\n    }\r\n    table.rows.forEach(data => {\r\n      const r = worksheet.getRow(row + count++);\r\n      data.forEach((value, j) => {\r\n        const cell = r.getCell(col + j);\r\n        cell.value = value;\r\n      });\r\n    });\r\n\r\n    if (table.totalsRow) {\r\n      const r = worksheet.getRow(row + count++);\r\n      table.columns.forEach((column, j) => {\r\n        const cell = r.getCell(col + j);\r\n        if (j === 0) {\r\n          cell.value = column.totalsRowLabel;\r\n        } else {\r\n          const formula = this.getFormula(column);\r\n          if (formula) {\r\n            cell.value = {\r\n              formula: column.totalsRowFormula,\r\n              result: column.totalsRowResult,\r\n            };\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  get model() {\r\n    return this.table;\r\n  }\r\n\r\n  set model(value) {\r\n    this.table = value;\r\n  }\r\n\r\n  // ================================================================\r\n  // TODO: Mutating methods\r\n  cacheState() {\r\n    if (!this._cache) {\r\n      this._cache = {\r\n        ref: this.ref,\r\n        width: this.width,\r\n        tableHeight: this.tableHeight,\r\n      };\r\n    }\r\n  }\r\n\r\n  commit() {\r\n    // changes may have been made that might have on-sheet effects\r\n    if (!this._cache) {\r\n      return;\r\n    }\r\n\r\n    // check things are ok first\r\n    this.validate();\r\n\r\n    const ref = colCache.decodeAddress(this._cache.ref);\r\n    if (this.ref !== this._cache.ref) {\r\n      // wipe out whole table footprint at previous location\r\n      for (let i = 0; i < this._cache.tableHeight; i++) {\r\n        const row = this.worksheet.getRow(ref.row + i);\r\n        for (let j = 0; j < this._cache.width; j++) {\r\n          const cell = row.getCell(ref.col + j);\r\n          cell.value = null;\r\n        }\r\n      }\r\n    } else {\r\n      // clear out below table if it has shrunk\r\n      for (let i = this.tableHeight; i < this._cache.tableHeight; i++) {\r\n        const row = this.worksheet.getRow(ref.row + i);\r\n        for (let j = 0; j < this._cache.width; j++) {\r\n          const cell = row.getCell(ref.col + j);\r\n          cell.value = null;\r\n        }\r\n      }\r\n\r\n      // clear out to right of table if it has lost columns\r\n      for (let i = 0; i < this.tableHeight; i++) {\r\n        const row = this.worksheet.getRow(ref.row + i);\r\n        for (let j = this.width; j < this._cache.width; j++) {\r\n          const cell = row.getCell(ref.col + j);\r\n          cell.value = null;\r\n        }\r\n      }\r\n    }\r\n\r\n    this.store();\r\n  }\r\n\r\n  addRow(values, rowNumber) {\r\n    // Add a row of data, either insert at rowNumber or append\r\n    this.cacheState();\r\n\r\n    if (rowNumber === undefined) {\r\n      this.table.rows.push(values);\r\n    } else {\r\n      this.table.rows.splice(rowNumber, 0, values);\r\n    }\r\n  }\r\n\r\n  removeRows(rowIndex, count = 1) {\r\n    // Remove a rows of data\r\n    this.cacheState();\r\n    this.table.rows.splice(rowIndex, count);\r\n  }\r\n\r\n  getColumn(colIndex) {\r\n    const column = this.table.columns[colIndex];\r\n    return new Column(this, column, colIndex);\r\n  }\r\n\r\n  addColumn(column, values, colIndex) {\r\n    // Add a new column, including column defn and values\r\n    // Inserts at colNumber or adds to the right\r\n    this.cacheState();\r\n\r\n    if (colIndex === undefined) {\r\n      this.table.columns.push(column);\r\n      this.table.rows.forEach((row, i) => {\r\n        row.push(values[i]);\r\n      });\r\n    } else {\r\n      this.table.columns.splice(colIndex, 0, column);\r\n      this.table.rows.forEach((row, i) => {\r\n        row.splice(colIndex, 0, values[i]);\r\n      });\r\n    }\r\n  }\r\n\r\n  removeColumns(colIndex, count = 1) {\r\n    // Remove a column with data\r\n    this.cacheState();\r\n\r\n    this.table.columns.splice(colIndex, count);\r\n    this.table.rows.forEach(row => {\r\n      row.splice(colIndex, count);\r\n    });\r\n  }\r\n\r\n  _assign(target, prop, value) {\r\n    this.cacheState();\r\n    target[prop] = value;\r\n  }\r\n\r\n  /* eslint-disable lines-between-class-members */\r\n  get ref() {\r\n    return this.table.ref;\r\n  }\r\n  set ref(value) {\r\n    this._assign(this.table, 'ref', value);\r\n  }\r\n\r\n  get name() {\r\n    return this.table.name;\r\n  }\r\n  set name(value) {\r\n    this.table.name = value;\r\n  }\r\n\r\n  get displayName() {\r\n    return this.table.displyName || this.table.name;\r\n  }\r\n  set displayNamename(value) {\r\n    this.table.displayName = value;\r\n  }\r\n\r\n  get headerRow() {\r\n    return this.table.headerRow;\r\n  }\r\n  set headerRow(value) {\r\n    this._assign(this.table, 'headerRow', value);\r\n  }\r\n\r\n  get totalsRow() {\r\n    return this.table.totalsRow;\r\n  }\r\n  set totalsRow(value) {\r\n    this._assign(this.table, 'totalsRow', value);\r\n  }\r\n\r\n  get theme() {\r\n    return this.table.style.name;\r\n  }\r\n  set theme(value) {\r\n    this.table.style.name = value;\r\n  }\r\n\r\n  get showFirstColumn() {\r\n    return this.table.style.showFirstColumn;\r\n  }\r\n  set showFirstColumn(value) {\r\n    this.table.style.showFirstColumn = value;\r\n  }\r\n\r\n  get showLastColumn() {\r\n    return this.table.style.showLastColumn;\r\n  }\r\n  set showLastColumn(value) {\r\n    this.table.style.showLastColumn = value;\r\n  }\r\n\r\n  get showRowStripes() {\r\n    return this.table.style.showRowStripes;\r\n  }\r\n  set showRowStripes(value) {\r\n    this.table.style.showRowStripes = value;\r\n  }\r\n\r\n  get showColumnStripes() {\r\n    return this.table.style.showColumnStripes;\r\n  }\r\n  set showColumnStripes(value) {\r\n    this.table.style.showColumnStripes = value;\r\n  }\r\n  /* eslint-enable lines-between-class-members */\r\n}\r\n\r\nmodule.exports = Table;\r\n"],"file":"table.js"}