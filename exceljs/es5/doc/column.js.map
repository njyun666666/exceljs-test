{"version":3,"sources":["../../../lib/doc/column.js"],"names":["_","require","Enums","colCache","DEFAULT_COLUMN_WIDTH","Column","worksheet","number","defn","_worksheet","_number","n2l","width","undefined","header","_header","key","style","hidden","outlineLevel","value","_hidden","_key","Array","headers","forEach","text","index","getCell","column","getColumnKey","deleteColumnKey","setColumnKey","_outlineLevel","properties","outlineLevelCol","JSON","stringify","length","other","isEqual","isCustomWidth","s","font","numFmt","alignment","border","fill","protection","options","iteratee","colNumber","eachRow","row","rowNumber","v","eachCell","cell","type","ValueType","Null","offset","hasOwnProperty","name","_applyStyle","columns","cols","col","isDefault","equivalentTo","min","max","collapsed","push","count","module","exports"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nconst _ = require('../utils/under-dash');\r\n\r\nconst Enums = require('./enums');\r\nconst colCache = require('../utils/col-cache');\r\n\r\nconst DEFAULT_COLUMN_WIDTH = 9;\r\n\r\n// Column defines the column properties for 1 column.\r\n// This includes header rows, widths, key, (style), etc.\r\n// Worksheet will condense the columns as appropriate during serialization\r\nclass Column {\r\n  constructor(worksheet, number, defn) {\r\n    this._worksheet = worksheet;\r\n    this._number = number;\r\n    if (defn !== false) {\r\n      // sometimes defn will follow\r\n      this.defn = defn;\r\n    }\r\n  }\r\n\r\n  get number() {\r\n    return this._number;\r\n  }\r\n\r\n  get worksheet() {\r\n    return this._worksheet;\r\n  }\r\n\r\n  get letter() {\r\n    return colCache.n2l(this._number);\r\n  }\r\n\r\n  get isCustomWidth() {\r\n    return this.width !== undefined && this.width !== DEFAULT_COLUMN_WIDTH;\r\n  }\r\n\r\n  get defn() {\r\n    return {\r\n      header: this._header,\r\n      key: this.key,\r\n      width: this.width,\r\n      style: this.style,\r\n      hidden: this.hidden,\r\n      outlineLevel: this.outlineLevel,\r\n    };\r\n  }\r\n\r\n  set defn(value) {\r\n    if (value) {\r\n      this.key = value.key;\r\n      this.width = value.width !== undefined ? value.width : DEFAULT_COLUMN_WIDTH;\r\n      this.outlineLevel = value.outlineLevel;\r\n      if (value.style) {\r\n        this.style = value.style;\r\n      } else {\r\n        this.style = {};\r\n      }\r\n\r\n      // headers must be set after style\r\n      this.header = value.header;\r\n      this._hidden = !!value.hidden;\r\n    } else {\r\n      delete this._header;\r\n      delete this._key;\r\n      delete this.width;\r\n      this.style = {};\r\n      this.outlineLevel = 0;\r\n    }\r\n  }\r\n\r\n  get headers() {\r\n    return this._header && this._header instanceof Array ? this._header : [this._header];\r\n  }\r\n\r\n  get header() {\r\n    return this._header;\r\n  }\r\n\r\n  set header(value) {\r\n    if (value !== undefined) {\r\n      this._header = value;\r\n      this.headers.forEach((text, index) => {\r\n        this._worksheet.getCell(index + 1, this.number).value = text;\r\n      });\r\n    } else {\r\n      this._header = undefined;\r\n    }\r\n  }\r\n\r\n  get key() {\r\n    return this._key;\r\n  }\r\n\r\n  set key(value) {\r\n    const column = this._key && this._worksheet.getColumnKey(this._key);\r\n    if (column === this) {\r\n      this._worksheet.deleteColumnKey(this._key);\r\n    }\r\n\r\n    this._key = value;\r\n    if (value) {\r\n      this._worksheet.setColumnKey(this._key, this);\r\n    }\r\n  }\r\n\r\n  get hidden() {\r\n    return !!this._hidden;\r\n  }\r\n\r\n  set hidden(value) {\r\n    this._hidden = value;\r\n  }\r\n\r\n  get outlineLevel() {\r\n    return this._outlineLevel || 0;\r\n  }\r\n\r\n  set outlineLevel(value) {\r\n    this._outlineLevel = value;\r\n  }\r\n\r\n  get collapsed() {\r\n    return !!(\r\n      this._outlineLevel && this._outlineLevel >= this._worksheet.properties.outlineLevelCol\r\n    );\r\n  }\r\n\r\n  toString() {\r\n    return JSON.stringify({\r\n      key: this.key,\r\n      width: this.width,\r\n      headers: this.headers.length ? this.headers : undefined,\r\n    });\r\n  }\r\n\r\n  equivalentTo(other) {\r\n    return (\r\n      this.width === other.width &&\r\n      this.hidden === other.hidden &&\r\n      this.outlineLevel === other.outlineLevel &&\r\n      _.isEqual(this.style, other.style)\r\n    );\r\n  }\r\n\r\n  get isDefault() {\r\n    if (this.isCustomWidth) {\r\n      return false;\r\n    }\r\n    if (this.hidden) {\r\n      return false;\r\n    }\r\n    if (this.outlineLevel) {\r\n      return false;\r\n    }\r\n    const s = this.style;\r\n    if (s && (s.font || s.numFmt || s.alignment || s.border || s.fill || s.protection)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  get headerCount() {\r\n    return this.headers.length;\r\n  }\r\n\r\n  eachCell(options, iteratee) {\r\n    const colNumber = this.number;\r\n    if (!iteratee) {\r\n      iteratee = options;\r\n      options = null;\r\n    }\r\n    this._worksheet.eachRow(options, (row, rowNumber) => {\r\n      iteratee(row.getCell(colNumber), rowNumber);\r\n    });\r\n  }\r\n\r\n  get values() {\r\n    const v = [];\r\n    this.eachCell((cell, rowNumber) => {\r\n      if (cell && cell.type !== Enums.ValueType.Null) {\r\n        v[rowNumber] = cell.value;\r\n      }\r\n    });\r\n    return v;\r\n  }\r\n\r\n  set values(v) {\r\n    if (!v) {\r\n      return;\r\n    }\r\n    const colNumber = this.number;\r\n    let offset = 0;\r\n    if (v.hasOwnProperty('0')) {\r\n      // assume contiguous array, start at row 1\r\n      offset = 1;\r\n    }\r\n    v.forEach((value, index) => {\r\n      this._worksheet.getCell(index + offset, colNumber).value = value;\r\n    });\r\n  }\r\n\r\n  // =========================================================================\r\n  // styles\r\n  _applyStyle(name, value) {\r\n    this.style[name] = value;\r\n    this.eachCell(cell => {\r\n      cell[name] = value;\r\n    });\r\n    return value;\r\n  }\r\n\r\n  get numFmt() {\r\n    return this.style.numFmt;\r\n  }\r\n\r\n  set numFmt(value) {\r\n    this._applyStyle('numFmt', value);\r\n  }\r\n\r\n  get font() {\r\n    return this.style.font;\r\n  }\r\n\r\n  set font(value) {\r\n    this._applyStyle('font', value);\r\n  }\r\n\r\n  get alignment() {\r\n    return this.style.alignment;\r\n  }\r\n\r\n  set alignment(value) {\r\n    this._applyStyle('alignment', value);\r\n  }\r\n\r\n  get protection() {\r\n    return this.style.protection;\r\n  }\r\n\r\n  set protection(value) {\r\n    this._applyStyle('protection', value);\r\n  }\r\n\r\n  get border() {\r\n    return this.style.border;\r\n  }\r\n\r\n  set border(value) {\r\n    this._applyStyle('border', value);\r\n  }\r\n\r\n  get fill() {\r\n    return this.style.fill;\r\n  }\r\n\r\n  set fill(value) {\r\n    this._applyStyle('fill', value);\r\n  }\r\n\r\n  // =============================================================================\r\n  // static functions\r\n\r\n  static toModel(columns) {\r\n    // Convert array of Column into compressed list cols\r\n    const cols = [];\r\n    let col = null;\r\n    if (columns) {\r\n      columns.forEach((column, index) => {\r\n        if (column.isDefault) {\r\n          if (col) {\r\n            col = null;\r\n          }\r\n        } else if (!col || !column.equivalentTo(col)) {\r\n          col = {\r\n            min: index + 1,\r\n            max: index + 1,\r\n            width: column.width !== undefined ? column.width : DEFAULT_COLUMN_WIDTH,\r\n            style: column.style,\r\n            isCustomWidth: column.isCustomWidth,\r\n            hidden: column.hidden,\r\n            outlineLevel: column.outlineLevel,\r\n            collapsed: column.collapsed,\r\n          };\r\n          cols.push(col);\r\n        } else {\r\n          col.max = index + 1;\r\n        }\r\n      });\r\n    }\r\n    return cols.length ? cols : undefined;\r\n  }\r\n\r\n  static fromModel(worksheet, cols) {\r\n    cols = cols || [];\r\n    const columns = [];\r\n    let count = 1;\r\n    let index = 0;\r\n    while (index < cols.length) {\r\n      const col = cols[index++];\r\n      while (count < col.min) {\r\n        columns.push(new Column(worksheet, count++));\r\n      }\r\n      while (count <= col.max) {\r\n        columns.push(new Column(worksheet, count++, col));\r\n      }\r\n    }\r\n    return columns.length ? columns : null;\r\n  }\r\n}\r\n\r\nmodule.exports = Column;\r\n"],"file":"column.js"}